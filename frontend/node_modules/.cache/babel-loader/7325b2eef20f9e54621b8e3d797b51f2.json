{"ast":null,"code":"import _toConsumableArray from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\src\\\\CreateTest.js\";\nimport React, { Component } from 'react';\nimport { Image } from 'react-bootstrap';\n\nvar axios = require(\"axios\");\n\nvar CreateTest =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateTest, _Component);\n\n  function CreateTest(props) {\n    var _this;\n\n    _classCallCheck(this, CreateTest);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateTest).call(this, props));\n\n    _this.handleChange = function (e) {\n      console.log(e.target.name);\n      var phase = _this.state.phase1;\n      var name = e.target.name;\n      var ph = _this.state.phase3;\n\n      if (name.split('question').length > 1) {\n        var index = parseInt(name.split('question')[1]);\n        phase[index].question = e.target.value;\n      } else if (name.split('answer').length > 1) {\n        var _index = parseInt(name.split('answer')[1]);\n\n        phase[_index].answer = e.target.value;\n      } else if (name.split('phq').length > 1) {\n        var _index2 = parseInt(name.split('phq')[1]);\n\n        ph[_index2].question = e.target.value;\n      } else if (name.split('pha').length > 1) {\n        var _index3 = parseInt(name.split('pha')[1]);\n\n        ph[_index3].answer = e.target.value;\n      } else if (name.split('difficulty').length > 1) {\n        var _index4 = parseInt(name.split('difficulty')[1]);\n\n        ph[_index4].difficulty = e.target.value;\n      } else if (name.split(\"php\").length > 1) {\n        ph.push({\n          question: '',\n          answer: '',\n          difficulty: ''\n        });\n      } else if (name.split('phd').length > 1) {\n        var _index5 = parseInt(name.split('phd')[1]);\n\n        ph.splice(_index5, 1);\n      } else if (name.split(\"add\").length > 1) {\n        phase.push({\n          question: '',\n          answer: ''\n        });\n      } else if (name.split('delete').length > 1) {\n        var _index6 = parseInt(name.split('delete')[1]);\n\n        phase.splice(_index6, 1);\n      }\n\n      _this.setState({\n        phase1: phase,\n        phase3: ph\n      });\n    };\n\n    _this.uploadFile = function (e) {\n      var files = Array.from(e.target.files);\n      console.log(files);\n      var images = _this.state.images;\n      console.log(images);\n      images.push.apply(images, _toConsumableArray(files));\n      console.log(images);\n\n      _this.setState({\n        images: images\n      });\n    };\n\n    _this.uploadQuesAns = function (e) {\n      var data = {\n        data1: _this.state.phase1,\n        data2: _this.state.phase3\n      };\n      console.log(data);\n      console.log(_this.state.phase1);\n      var config = {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      };\n      var testname = document.getElementById(\"testname\").value;\n      axios.post(\"http://localhost:8889/uploadtest/\".concat(testname), data, config).then(function (response) {\n        console.log(\"The test is successfully uploaded\");\n      }).catch(function (error) {});\n      data = new FormData();\n      var files = _this.state.images;\n\n      for (var k = 0; k < files.length; k++) {\n        data.append('imgUploader', files[k]);\n      }\n\n      config = {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      };\n      axios.post(\"http://localhost:8889/upload/\".concat(testname), data, config).then(function (response) {\n        alert(\"The test is successfully uploaded\");\n      }).catch(function (error) {});\n    };\n\n    _this.state = {\n      phase1: [{\n        question: \"\",\n        answer: \"\"\n      }],\n      images: [],\n      phase3: [{\n        question: \"\",\n        answer: \"\",\n        difficulty: \"\"\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(CreateTest, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"testcred\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"testinput\",\n        id: \"testname\",\n        placeholder: \"Test Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"test1\",\n        style: {\n          backgroundColor: \"lightblue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontFamily: \"Consolas\",\n          fontSize: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"You can add question and their expected answer for the first phase of test here.\"), React.createElement(\"button\", {\n        className: \"addbutton\",\n        name: \"add\",\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Add Row\"), React.createElement(\"table\", {\n        className: \"tableques\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.phase1.map(function (value, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quesans\",\n          name: \"question\" + key,\n          placeholder: \"Question\",\n          value: value.question,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quesans\",\n          name: \"answer\" + key,\n          placeholder: \"Answer\",\n          value: value.answer,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"deletebutton\",\n          name: \"delete\" + key,\n          onClick: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149\n          },\n          __self: this\n        }, \"Delete\")));\n      })))), React.createElement(\"div\", {\n        className: \"test2\",\n        style: {\n          backgroundColor: \"moccasin\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontFamily: \"Consolas\",\n          fontSize: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"You can add images for the second phase of test here.\"), React.createElement(\"input\", {\n        className: \"addbutton\",\n        type: \"file\",\n        name: \"imgUploader\",\n        onChange: this.uploadFile,\n        multiple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), this.state.images && this.state.images.length > 0 && this.state.images.map(function (value, key) {\n        return React.createElement(Image, {\n          key: key + 1,\n          style: {\n            width: \"50px\",\n            height: \"50px\"\n          },\n          src: URL.createObjectURL(value),\n          name: \"img\" + key,\n          roundedCircle: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        });\n      }), React.createElement(\"div\", {\n        className: \"test1\",\n        style: {\n          backgroundColor: \"lightblue\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          fontFamily: \"Consolas\",\n          fontSize: \"30px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"You can add question, their expected answer and difficulty for the third phase of test here.\"), React.createElement(\"button\", {\n        className: \"addbutton\",\n        name: \"php\",\n        onClick: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Add Row\"), React.createElement(\"table\", {\n        className: \"tableques\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.state.phase3.map(function (value, key) {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quesans\",\n          name: \"phq\" + key,\n          placeholder: \"Question\",\n          value: value.question,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"quesans\",\n          name: \"pha\" + key,\n          placeholder: \"Answer\",\n          value: value.answer,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          className: \"difficulty\",\n          name: \"difficulty\" + key,\n          placeholder: \"Difficulty\",\n          value: value.difficulty,\n          onChange: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"deletebutton\",\n          name: \"phd\" + key,\n          onClick: _this2.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179\n          },\n          __self: this\n        }, \"Delete\")));\n      })))), React.createElement(\"div\", {\n        className: \"submitdiv\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"addbutton\",\n        name: \"Submittest\",\n        onClick: this.uploadQuesAns,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Submit test\")));\n    }\n  }]);\n\n  return CreateTest;\n}(Component);\n\nexport { CreateTest as default };","map":{"version":3,"sources":["E:\\PsychometricAnalysisTool\\frontend\\src\\CreateTest.js"],"names":["React","Component","Image","axios","require","CreateTest","props","handleChange","e","console","log","target","name","phase","state","phase1","ph","phase3","split","length","index","parseInt","question","value","answer","difficulty","push","splice","setState","uploadFile","files","Array","from","images","uploadQuesAns","data","data1","data2","config","headers","body","JSON","stringify","testname","document","getElementById","post","then","response","catch","error","FormData","k","append","alert","backgroundColor","fontFamily","fontSize","map","key","width","height","URL","createObjectURL"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Image} from 'react-bootstrap';\n\nconst axios = require(\"axios\");\n\nexport default class CreateTest extends Component{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            phase1:[{question:\"\",answer:\"\"}],\n            images:[],\n            phase3:[{question:\"\",answer:\"\",difficulty:\"\"}],\n        }\n    }\n    handleChange=(e)=>{\n        console.log(e.target.name);\n        \n        let phase  = this.state.phase1;\n        let name = e.target.name;\n        let ph = this.state.phase3;\n        if(name.split('question').length>1)\n        {\n            let index = parseInt(name.split('question')[1]);\n            phase[index].question=e.target.value;\n            \n        }\n        else if(name.split('answer').length>1)\n        {\n            let index = parseInt(name.split('answer')[1]);\n            phase[index].answer=e.target.value;\n            \n        }else if(name.split('phq').length>1)\n        {\n            let index = parseInt(name.split('phq')[1]);\n            ph[index].question=e.target.value;\n            \n        }\n        else if(name.split('pha').length>1)\n        {\n            let index = parseInt(name.split('pha')[1]);\n            ph[index].answer=e.target.value;\n            \n        }\n        else if(name.split('difficulty').length>1)\n        {\n            let index = parseInt(name.split('difficulty')[1]);\n            ph[index].difficulty=e.target.value;\n            \n        }\n        else if(name.split(\"php\").length>1)\n        {\n            ph.push({question:'',answer:'',difficulty:''});\n           \n        }\n        else if(name.split('phd').length>1)\n        {\n            let index = parseInt(name.split('phd')[1]);\n            ph.splice(index,1);\n            \n        }\n        else if(name.split(\"add\").length>1)\n        {\n            phase.push({question:'',answer:''});\n           \n        }\n        else if(name.split('delete').length>1)\n        {\n            let index = parseInt(name.split('delete')[1]);\n            phase.splice(index,1);\n            \n        }\n        this.setState({\n            phase1:phase,\n            phase3: ph\n        });\n        \n    }\n    uploadFile = (e)=>{\n        const files = Array.from(e.target.files);\n        console.log(files);\n        let images = this.state.images;\n        console.log(images);\n        images.push(...files);\n        console.log(images);\n        this.setState({\n            images:images\n        });\n       \n    }\n    uploadQuesAns=(e)=>{\n        let data={ \n            data1:this.state.phase1,\n            data2:this.state.phase3,\n        };\n        \n        console.log(data);\n        console.log(this.state.phase1);\n        var config = {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        };\n        var   testname= document.getElementById(\"testname\").value;\n        axios.post(`http://localhost:8889/uploadtest/${testname}`,data,config)\n            .then((response) => {\n                console.log(\"The test is successfully uploaded\");\n            }).catch((error) => {\n        });\n        data  = new FormData();\n        var files= this.state.images;\n        for(let k=0;k<files.length;k++)\n        {\n            data.append('imgUploader',files[k]);\n        }\n        config = {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            },   \n        };\n        axios.post(`http://localhost:8889/upload/${testname}`,data,config)\n            .then((response) => {\n                alert(\"The test is successfully uploaded\");\n            }).catch((error) => {\n        });\n\n    }\n    render()\n    {\n        return(\n        \n        <div >\n            \n            <div className=\"testcred\">\n            <input className=\"testinput\" id=\"testname\" placeholder=\"Test Name\"></input>\n            </div>\n            <div className=\"test1\" style={{    backgroundColor: \"lightblue\"}}>\n                <p style={{fontFamily: \"Consolas\",fontSize:\"30px\"}}>\n                You can add question and their expected answer for the first phase of test here.</p>\n            <button className=\"addbutton\" name=\"add\" onClick={this.handleChange}>Add Row</button>\n            <table className=\"tableques\">\n                <tbody>\n                {this.state.phase1.map((value,key)=>{\n                    return (\n                    <tr key ={key}>\n                        <td ><input  className=\"quesans\" name={\"question\"+key} placeholder=\"Question\" value={value.question} onChange={this.handleChange} /></td>\n                        <td ><input  className=\"quesans\" name={\"answer\"+key} placeholder=\"Answer\" value ={value.answer} onChange={this.handleChange}/></td>\n                        <td><button className=\"deletebutton\" name={\"delete\"+key} onClick={this.handleChange}>Delete</button></td>\n                    </tr>)\n                })}\n                </tbody>\n            </table>\n            </div>\n            <div className=\"test2\" style={{ backgroundColor: \"moccasin\"}}>\n            <p style={{fontFamily: \"Consolas\", fontSize:\"30px\"}}>\n            You can add images for the second phase of test here.</p>\n            <input className=\"addbutton\" type=\"file\" name=\"imgUploader\"  onChange={this.uploadFile} multiple/>\n            </div>\n            {this.state.images&&this.state.images.length>0\n            &&this.state.images.map((value,key)=>{\n                return (<Image key={key+1} style={{\n                    width:\"50px\",\n                    height:\"50px\"\n                }}src={URL.createObjectURL(value)} name={\"img\"+key} roundedCircle />)\n            })}\n            <div className=\"test1\" style={{    backgroundColor: \"lightblue\"}}>\n                <p style={{fontFamily: \"Consolas\",fontSize:\"30px\"}}>\n                You can add question, their expected answer and difficulty for the third phase of test here.</p>\n            <button className=\"addbutton\" name=\"php\" onClick={this.handleChange}>Add Row</button>\n            <table className=\"tableques\">\n                <tbody>\n                {this.state.phase3.map((value,key)=>{\n                    return (\n                    <tr key ={key}>\n                        <td ><input  className=\"quesans\" name={\"phq\"+key} placeholder=\"Question\" value={value.question} onChange={this.handleChange} /></td>\n                        <td ><input  className=\"quesans\" name={\"pha\"+key} placeholder=\"Answer\" value ={value.answer} onChange={this.handleChange}/></td>\n                        <td ><input  className=\"difficulty\" name={\"difficulty\"+key} placeholder=\"Difficulty\" value ={value.difficulty} onChange={this.handleChange}/></td>\n                        <td><button className=\"deletebutton\" name={\"phd\"+key} onClick={this.handleChange}>Delete</button></td>\n                    </tr>)\n                })}\n                </tbody>\n            </table>\n            </div>\n            <div className=\"submitdiv\">\n            <button className=\"addbutton\" name=\"Submittest\" onClick={this.uploadQuesAns}>Submit test</button>\n            </div>\n        </div>);\n    }\n\n}"]},"metadata":{},"sourceType":"module"}