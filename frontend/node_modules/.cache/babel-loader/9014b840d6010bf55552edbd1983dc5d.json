{"ast":null,"code":"import _classCallCheck from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\src\\\\Home.js\";\nimport React, { Component } from 'react';\nimport './home.css';\nimport a from \"./mind1.jpg\";\nimport b from \"./mind2.jpg\";\nimport c from \"./mind3.jpg\";\nimport d from \"./mind4.jpg\";\nimport e from \"./mind5.jpg\";\nimport f from \"./mind6.jpg\";\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Home).apply(this, arguments));\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"main-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"main-head\",\n        id: \"banner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        className: \"main-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Psychometric Analysis\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"main-head-para\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, \"Psychometric Analysis Tool powers judgment based on the assessment of the emotional state of an individual by using webcam, microphone and keyboard inputs. \"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      })), React.createElement(\"section\", {\n        id: \"one\",\n        name: \"one\",\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"inner\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"align-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"Features\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"flex flex-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: a,\n        alt: \"Pic 01\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"I: Facial Emotion Recognition\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \"While the interviewee speaks or gives a verbal response, images are captured periodically from the webcam or video camera feed. The facial expression recognition model classifies each image, calculating the class probability for each possible target class (angry, disgust, fear, happy, sad, neutral, or surprise). The two classes with highest probabilities are used for analysis.\")), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: b,\n        alt: \"Pic 02\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"II: Speech Emotion Recognition\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"The interviewee\\u2019s verbal response is recorded. The speech emotion recognition model is used on the sequences of pressure levels (of successive frames) extracted from the audio recording to assign a probability for each possible target class (angry, disgust, fear, happy, sad, neutral, or surprise). The two classes with highest probabilities are used for analysis.\"))), React.createElement(\"div\", {\n        className: \"flex flex-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: c,\n        alt: \"Pic 03\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"III: Image Based Perspective Analysis\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"The interviewee writes an honest descriptions of the shown image. The text in the description is processed and converted to a feature vector. The sentiment analysis model takes the feature vector as input and calculates the probability for each target class (positive, neutral, or negative). This is used to determine the polarity of the interviewee\\u2019s opinions, and thus, his/her attitude.\")), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: d,\n        alt: \"Pic 04\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"IV: Text Based Similarity\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"The interviewee writes a response to the given question. The database contains the expected answer to the question. The given and expected responses are compared using similarity measures like cosine similarity and jaccard similarity, and a score is assigned to the interviewee\\u2019s response.\"))), React.createElement(\"div\", {\n        className: \"flex flex-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: e,\n        alt: \"Pic 05\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"V: Automated Chatbot\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Adaptive, interactive chatbot for questioning and answering by context detection throughout the test session.\")), React.createElement(\"article\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"image fit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: f,\n        alt: \"Pic 06\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(\"header\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"VI: Database Management\")), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"A database file is created which stores the filename and picture information in the form of BLOB. Another database records list of questions and their respective answers entered by the administrator. They can be accessed by querying the database by making a connection request to it.\")))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["E:\\PsychometricAnalysisTool\\frontend\\src\\Home.js"],"names":["React","Component","a","b","c","d","e","f","Home"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,YAAP;AACA,OAAOC,CAAP,MAAc,aAAd;AACA,OAAOC,CAAP,MAAc,aAAd;AACA,OAAOC,CAAP,MAAc,aAAd;AACA,OAAOC,CAAP,MAAc,aAAd;AACA,OAAOC,CAAP,MAAc,aAAd;AACA,OAAOC,CAAP,MAAc,aAAd;;IAEqBC,I;;;;;;;;;;;;;6BACR;AACL,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAS,QAAA,SAAS,EAAC,WAAnB;AAA+B,QAAA,EAAE,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAEQ;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wKAFR,EAEyM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFzM,CADJ,EAKI;AAAS,QAAA,EAAE,EAAC,KAAZ;AAAkB,QAAA,IAAI,EAAC,KAAvB;AAA6B,QAAA,SAAS,EAAC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEN,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uYAPJ,CADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6XAPJ,CAfJ,CALJ,EAkCI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sZAPJ,CADJ,EAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kTAPJ,CAfJ,CAlCJ,EA8DI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAPJ,CADJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,GAAG,EAAEC,CAAV;AAAa,QAAA,GAAG,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,CAJJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uSAPJ,CAZJ,CA9DJ,CADJ,CALJ,CADN,CADF;AAoGD;;;;EAtG2BN,S;;SAAbO,I","sourcesContent":["import React,{Component} from 'react';\nimport './home.css';\nimport a from \"./mind1.jpg\";\nimport b from \"./mind2.jpg\";\nimport c from \"./mind3.jpg\";\nimport d from \"./mind4.jpg\";\nimport e from \"./mind5.jpg\";\nimport f from \"./mind6.jpg\";\n\nexport default class Home extends Component{\n    render() {\n        return (\n          <div>\n                <div className=\"main-body\">\n                    <section className=\"main-head\" id=\"banner\">\n                        <h1 className=\"main-heading\">Psychometric Analysis</h1>\n                        <p/><h3 className=\"main-head-para\" >Psychometric Analysis Tool powers judgment based on the assessment of the emotional state of an individual by using webcam, microphone and keyboard inputs. </h3><p/>\n                    </section>\n                    <section id=\"one\" name=\"one\" className=\"wrapper\">\n                        <div className=\"inner\">\n                            <header className=\"align-center\">\n                                <h2>Features</h2>\n                                <p/>\n                            </header>\n                            <div className=\"flex flex-2\">\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={a} alt=\"Pic 01\"/>\n                                    </div>\n                                    <header>\n                                        <h3>I: Facial Emotion Recognition</h3>\n                                    </header>\n                                    <p>While the interviewee speaks or gives a verbal response, images are captured periodically\n                                        from the webcam or video camera feed. The facial expression recognition model classifies each\n                                        image, calculating the class probability for each possible target class (angry, disgust, fear,\n                                        happy, sad, neutral, or surprise). The two classes with highest probabilities are used for\n                                        analysis.</p>\n\n                                </article>\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={b} alt=\"Pic 02\"/>\n                                    </div>\n                                    <header>\n                                        <h3>II: Speech Emotion Recognition</h3>\n                                    </header>\n                                    <p>The interviewee’s verbal response is recorded. The speech emotion recognition model is used\n                                        on the sequences of pressure levels (of successive frames) extracted from the audio recording\n                                        to assign a probability for each possible target class (angry, disgust, fear, happy, sad, neutral,\n                                        or surprise). The two classes with highest probabilities are used for analysis.</p>\n\n                                </article>\n                            </div>\n                            <div className=\"flex flex-2\">\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={c} alt=\"Pic 03\"/>\n                                    </div>\n                                    <header>\n                                        <h3>III: Image Based Perspective Analysis</h3>\n                                    </header>\n                                    <p>The interviewee writes an honest descriptions of the shown image. The text in the description\n                                        is processed and converted to a feature vector. The sentiment analysis model takes the feature\n                                        vector as input and calculates the probability for each target class (positive, neutral, or\n                                        negative). This is used to determine the polarity of the interviewee’s opinions, and thus,\n                                        his/her attitude.</p>\n\n                                </article>\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={d} alt=\"Pic 04\"/>\n                                    </div>\n                                    <header>\n                                        <h3>IV: Text Based Similarity</h3>\n                                    </header>\n                                    <p>The interviewee writes a response to the given question. The database contains the expected\n                                        answer to the question. The given and expected responses are compared using similarity\n                                        measures like cosine similarity and jaccard similarity, and a score is assigned to the\n                                        interviewee’s response.</p>\n                                </article>\n                            </div>\n                            <div className=\"flex flex-2\">\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={e} alt=\"Pic 05\"/>\n                                    </div>\n                                    <header>\n                                        <h3>V: Automated Chatbot</h3>\n                                    </header>\n                                    <p>Adaptive, interactive chatbot for questioning and answering by context detection throughout the\n                                    test session.</p>\n\n                                </article>\n                                <article>\n                                    <div className=\"image fit\">\n                                        <img src={f} alt=\"Pic 06\"/>\n                                    </div>\n                                    <header>\n                                        <h3>VI: Database Management</h3>\n                                    </header>\n                                    <p>A database file is created which stores the filename and picture information in the form of\n                                        BLOB. Another database records list of questions and their respective answers entered by the\n                                        administrator. They can be accessed by querying the database by making a connection request\n                                        to it.</p>\n                                </article>\n                            </div>\n                        </div>\n                    </section>\n                </div>\n          </div>\n        );\n      }\n}"]},"metadata":{},"sourceType":"module"}