{"ast":null,"code":"import _classCallCheck from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\PsychometricAnalysisTool\\\\frontend\\\\src\\\\Phase2.js\";\nimport React, { Component } from 'react';\nimport './phase2.css'; // const axios = require(\"axios\");\n\nvar Phase2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Phase2, _Component);\n\n  function Phase2(props) {\n    var _this;\n\n    _classCallCheck(this, Phase2);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Phase2).call(this, props));\n\n    _this.submitDescription = function () {\n      console.log(\"submit description k ander\", _this.state.sentians);\n      var answer = _this.state.sentians;\n      var i = _this.state.imgid;\n      var ans = \"answer\" + i;\n      var json = {};\n      json[ans] = answer;\n      fetch(\"http://localhost:8889/saveSentimentAnswer/\", {\n        method: 'post',\n        headers: new Headers({\n          'content-type': 'application/json'\n        }),\n        \"withCredentials\": true,\n        \"mode\": \"cors\",\n        body: JSON.stringify(json)\n      }).then(function (response) {\n        console.log(\"ye raha response\", response);\n        console.log(\"save ho gaya\");\n      }).catch(function (err) {\n        console.log(\"ye ri err\", err);\n      });\n    };\n\n    _this.handleImages = function (e) {\n      var name = e.target.name;\n      var ii = _this.state.imgid;\n      var il = _this.state.images.length;\n\n      if (name === 'imgprevious') {\n        if (ii === 0) ii = il - 1;else ii -= 1;\n\n        _this.setState({\n          imgid: ii\n        });\n      } else if (name === 'imgnext') {\n        if (ii === il - 1) ii = 0;else ii += 1;\n\n        _this.setState({\n          imgid: ii\n        });\n      }\n    };\n\n    _this.handleChangeAnswer = function (e) {\n      var name = e.target.name;\n      var test = _this.state.sentians;\n\n      if (name.split('sentianswer').length > 1) {\n        test = e.target.value;\n\n        _this.setState({\n          sentians: test\n        }); //console.log(\"changing name\",this.state.sentians);\n\n      }\n    };\n\n    _this.state = {\n      images: [],\n      imgid: 0,\n      showtest: 0,\n      test: \"\",\n      showselect: true\n    };\n    return _this;\n  }\n\n  _createClass(Phase2, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"flex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"card-title2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Describe Me\"), React.createElement(\"p\", {\n        className: \"card-text2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"You can navigate through images using previous and next buttons\"), React.createElement(\"img\", {\n        className: \"imagesenti\",\n        alt: \"yo\",\n        name: \"image\" + this.state.imgid,\n        id: \"image\" + this.state.imgid,\n        src: URL.createObjectURL(this.state.images[this.state.imgid]),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"queschangerow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"changeimgp\",\n        name: \"imgprevious\",\n        onClick: this.handleImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Previous\"), React.createElement(\"button\", {\n        className: \"changeimgn\",\n        name: \"imgnext\",\n        onClick: this.handleImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Next\")))), React.createElement(\"div\", {\n        className: \"card2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: \"card-title2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Perception Check\"), React.createElement(\"p\", {\n        className: \"card-text2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Write a description of the image you see in 10-50 words. \"), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        type: \"text\",\n        className: \"sentians\",\n        id: \"sentianswer\" + this.state.imgid,\n        style: {\n          width: \"-webkit-fill-available\",\n          height: \"365px\",\n          fontSize: \"large\",\n          padding: \"5px\",\n          fontFamily: \"fantasy\"\n        },\n        name: \"sentianswer\" + this.state.imgid,\n        onChange: this.handleChangeAnswer,\n        placeholder: \"Answer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        className: \"addbutton\",\n        onClick: this.submitDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"SubmitAnswer\"))))));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.images !== prevState.images) {\n        return {\n          images: nextProps.images\n        };\n      } else return null;\n    } // componentDidUpdate(prevProps, prevState) {\n    //     if(prevProps.someValue!==this.props.someValue){\n    //       //Perform some operation here\n    //       this.setState({someState: someValue});\n    //     }\n    //   }\n    // componentWillReceiveProps(nextProps,prevProps)\n    // {\n    //     console.log(\"idhar\",prevProps.images,nextProps.images);\n    //     if(prevProps!==nextProps&&nextProps.images.length>0)\n    //     {\n    //         this.setState({\n    //             images:nextProps.images\n    //         });\n    //     }\n    // }\n\n  }]);\n\n  return Phase2;\n}(Component);\n\nexport { Phase2 as default };","map":{"version":3,"sources":["E:\\PsychometricAnalysisTool\\frontend\\src\\Phase2.js"],"names":["React","Component","Phase2","props","submitDescription","console","log","state","sentians","answer","i","imgid","ans","json","fetch","method","headers","Headers","body","JSON","stringify","then","response","catch","err","handleImages","e","name","target","ii","il","images","length","setState","handleChangeAnswer","test","split","value","showtest","showselect","URL","createObjectURL","width","height","fontSize","padding","fontFamily","nextProps","prevState"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport './phase2.css';\n// const axios = require(\"axios\");\n\n\nexport default class Phase2 extends Component{\n    constructor(props) {\n        super(props);\n        this.state={\n           \n            images:[],\n            imgid:0,\n            showtest: 0,\n            test:\"\",\n            showselect: true\n        }\n    }\n\n    static getDerivedStateFromProps(nextProps, prevState){\n        if(nextProps.images!==prevState.images){\n          return { images: nextProps.images};\n       }\n       else return null;\n     }\n    // componentDidUpdate(prevProps, prevState) {\n    //     if(prevProps.someValue!==this.props.someValue){\n    //       //Perform some operation here\n    //       this.setState({someState: someValue});\n        \n    //     }\n    //   }\n\n    // componentWillReceiveProps(nextProps,prevProps)\n    // {\n    //     console.log(\"idhar\",prevProps.images,nextProps.images);\n    //     if(prevProps!==nextProps&&nextProps.images.length>0)\n    //     {\n    //         this.setState({\n    //             images:nextProps.images\n    //         });\n\n    //     }\n        \n    // }\n\n    submitDescription=()=>{\n        console.log(\"submit description k ander\",this.state.sentians);\n        var answer=this.state.sentians;\n        var i= this.state.imgid;\n        var ans= \"answer\"+i;\n        var json={}\n        json[ans]=answer;\n        fetch(\"http://localhost:8889/saveSentimentAnswer/\",\n        {\n            method: 'post',\n            headers: new Headers({'content-type': 'application/json'}),\n            \"withCredentials\":true,\n            \"mode\":\"cors\",\n            body: JSON.stringify(\n                json)\n            }).then(response=>{\n                console.log(\"ye raha response\",response);\n            console.log(\"save ho gaya\");\n        }).catch(err=>{\n            console.log(\"ye ri err\",err);\n        })\n        \n    }\n    handleImages=(e)=>{\n        let name = e.target.name;\n        let ii=this.state.imgid;\n        let il=this.state.images.length;\n        if(name==='imgprevious')\n        {\n            if(ii===0)ii=il-1;\n            else ii-=1;\n            this.setState({\n                imgid:ii\n            });\n        }\n        else if(name==='imgnext')\n        {\n            if(ii===il-1)ii=0;\n            else ii+=1;\n            this.setState({\n                imgid:ii\n            });\n        }\n    }\n    handleChangeAnswer=(e)=>{\n        let name = e.target.name;\n        let test=this.state.sentians;\n        if(name.split('sentianswer').length>1)\n        {\n            test=e.target.value;\n            this.setState({\n                sentians:test\n            });\n            //console.log(\"changing name\",this.state.sentians);\n        }\n        \n    }\n    render(){\n        return(\n            <div className=\"row\">\n                <div className=\"flex\">\n                    <div className=\"card2\">\n                        <div className=\"card-body2\">\n                            <h4 className=\"card-title2\">Describe Me</h4>\n                            <p className=\"card-text2\">You can navigate through images using previous and next buttons</p>\n                            <img className=\"imagesenti\" alt=\"yo\" name={\"image\"+this.state.imgid}  id={\"image\"+this.state.imgid} src={URL.createObjectURL(this.state.images[this.state.imgid])}/>\n                            <div className=\"queschangerow\">\n                                <button className=\"changeimgp\" name=\"imgprevious\" onClick={this.handleImages}>Previous</button>\n                                <button className=\"changeimgn\" name=\"imgnext\" onClick={this.handleImages}>Next</button>\n                            </div>\n                        </div>\n                    </div>\n                        <div className=\"card2\">\n                            <div className=\"card-body2\">\n                                <h4 className=\"card-title2\">Perception Check</h4>\n                                <p className=\"card-text2\">Write a description of the image you see in 10-50 words. </p>\n                                <div className=\"row\">\n                                    <textarea type=\"text\" className=\"sentians\" id={\"sentianswer\"+this.state.imgid} style={{\n                                        width: \"-webkit-fill-available\",\n                                        height: \"365px\",\n                                        fontSize: \"large\",\n                                        padding:\"5px\",\n                                        fontFamily: \"fantasy\"\n                                    }}\n                                    name={\"sentianswer\"+this.state.imgid} onChange={this.handleChangeAnswer} placeholder=\"Answer\"/>\n                                    <button className=\"addbutton\" onClick={this.submitDescription}>SubmitAnswer</button> \n                                </div>\n                                {/* <div>\n                                    {(this.state.showsentimentscore)&&\n                                        <textarea className=\"imagescore\" style={{\n                                            display: \"table\",\n                                            width: \"-webkit-fill-available\",\n                                            height: \"80px\",\n                                            marginTop: \"15px\",\n                                            fontSize: \"medium\",\n                                            fontFamily: \"monospace\"\n                                        }}\n                                        name={\"iscore\"+this.state.imgid} placeholder=\"Score\" value ={this.state.sentimentvalue}/>\n                                    } \n                                </div> */}\n                                {/* <div className=\"row\" style={{\n                                        position:\"absolute\",\n                                        right:\"47px\",\n                                        bottom:\"41px\"\n                                    }}>\n                                    < button className=\"addbutton\" onClick={this.secondPhase}>Finish Test</button>  \n                                </div> */}\n                            </div>\n                        </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}